Index: src/main/java/ui/VentanaActividades.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ui;\nimport client.Client;\nimport domain.Actividad;\nimport javax.swing.*;\nimport javax.swing.border.Border;\nimport java.awt.*;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.Objects;\n\nimport domain.Customer;\n\n\npublic class VentanaActividades extends JFrame{\n\n    public String usuario;\n    public String contrasena;\n    JPanel principal = new JPanel();\n    Font font2 = new Font(\"Broadway\", Font.PLAIN, 20);\n    Font font1 = new Font(\"SansSerif\", Font.PLAIN, 15);\n\n\n\n    public static void main(String[] args) {\n        VentanaActividades game = new VentanaActividades(\"beatrizorbe\");\n    }\n\n    public VentanaActividades(String usuario) {\n\n        this.usuario=usuario;\n\n        this.setSize(700, 700);\n        ArrayList<Actividad> actividades = ObtenActividades();\n        principal.setForeground(Color.BLUE);\n\n        //LABEL Categorias\n        JLabel categorias = new JLabel();\n        categorias.setPreferredSize(new Dimension(600, 80));\n        GridLayout grid = new GridLayout(1, 4);\n        categorias.setLayout(grid);\n        principal.add(categorias, BorderLayout.WEST);\n        JButton deporte = new JButton(\"DEPORTES\");\n        JButton fiesta = new JButton(\"FIESTAS\");\n        JButton cultura = new JButton(\"CULTURA\");\n        JButton musica = new JButton(\"MUSICA\");\n        categorias.add(deporte);\n        categorias.add(cultura);\n        categorias.add(fiesta);\n        categorias.add(musica);\n\n        //btn info usuario\n        JButton btnInfoUsuario = new JButton(\"INFO\");\n        btnInfoUsuario.setBorder(new RoundedBorder(15));\n        principal.add(btnInfoUsuario, BorderLayout.NORTH);\n\n\n        //OBTENGO PERFIL USUARIO, sus tres categorias favoritas segun el cuestionario rellenado y lo separo para poder trabajr con las categorias.\n        String perfil =  ObtenPerfil();\n\n        String[] perfilUsuario = perfil.split(\";\");\n        String perfil1 = perfilUsuario[0];\n        String perfil2 = perfilUsuario[1];\n        String perfil3 =perfilUsuario[2];\n\n\n        //Scroll actividades\n        ImageIcon fondo = new ImageIcon(\"resources/fotoFondo.jpg\");\n        JLabel img = new JLabel(fondo,0);\n        JScrollPane scrollPane = new JScrollPane();\n        scrollPane.setBounds(5,100, 700, 600);\n        GridLayout grid3 = new GridLayout();\n        JPanel activi = new JPanel();\n        activi.add(img);\n        activi.setPreferredSize(new Dimension(700, 2000));\n\n\n        //CREAMOS EL GRID LAYOUT CORRESPONDIENTE AL TIPO DE PLANES QUE QUIERE EL QUIERE ~ ASOCIADO A SU PERFIL\n\n        JButton[] btnActividades = new JButton[60];\n        scrollPane.add(activi);\n\n        //de su primera favorita categoria ponemos 9 actividades\n        //recorremos la base de datos buscando aquellas actividades que correspondan con la categoria buscada\n        int j = 0;\n        for (int i = 0; i < actividades.toArray().length; i++) {\n            System.out.println(actividades.get(i).getCategoria());\n            System.out.println(actividades.get(i).getNombre());\n            System.out.println(Objects.equals(actividades.get(i).getCategoria(), perfil1));\n            if ((Objects.equals(actividades.get(i).getCategoria(), perfil1)) == true) {\n                btnActividades[j] = new JButton(actividades.get(i).getNombre());\n                btnActividades[j].setPreferredSize(new Dimension(200, 100));\n                btnActividades[j].setBorder(new RoundedBorder(50));\n                activi.add(btnActividades[j]);\n                btnActividades[j].setFont(font1);\n                j++;\n            }\n        }\n\n        //de su segunda categoria favorita ponemos 6 actividades\n        int k = 0;\n        for (int i = 0; i < actividades.toArray().length; i++) {\n            System.out.println(actividades.get(i).getCategoria());\n            System.out.println(perfil2);\n            System.out.println(actividades.get(i).getNombre());\n\n            System.out.println(Objects.equals(actividades.get(i).getCategoria(), perfil2));\n            if ((Objects.equals(actividades.get(i).getCategoria(), perfil2)) == true)\n                if (k<6){\n                btnActividades[k] = new JButton(actividades.get(i).getNombre());\n                btnActividades[k].setPreferredSize(new Dimension(200, 100));\n                btnActividades[k].setBorder(new RoundedBorder(50));\n                activi.add(btnActividades[k]);\n                btnActividades[k].setFont(font1);\n                k++;\n            }\n        }\n\n        //de su tercera categoria favorita ponemos 3 actividades\n        int p = 0;\n        for (int i = 0; i < actividades.toArray().length; i++) {\n            System.out.println(actividades.get(i).getCategoria());\n            System.out.println(perfil2);\n            System.out.println(actividades.get(i).getNombre());\n\n            System.out.println(Objects.equals(actividades.get(i).getCategoria(), perfil2));\n\n            if ((Objects.equals(actividades.get(i).getCategoria(), perfil3)) == true)  {\n                if (p<3) {\n                    btnActividades[p] = new JButton(actividades.get(i).getNombre());\n                    btnActividades[p].setPreferredSize(new Dimension(200, 100));\n                    btnActividades[p].setBorder(new RoundedBorder(50));\n                    activi.add(btnActividades[p]);\n                    btnActividades[p].setFont(font1);\n                    p++;\n                }\n            }\n        }\n        //del resto de categorias que no se ajustan a su perfil no pongo ninguna actividad\n\n\n\n\n        scrollPane.setViewportView(activi);\n        this.add(scrollPane);\n        this.setForeground(Color.BLUE);\n        this.add(principal);\n        this.setDefaultCloseOperation(3);\n        this.setLocationRelativeTo(null);\n        this.setResizable(false);\n        this.setVisible(true);\n\n\n    }\n\n    //En este metodo intento hacer los botones redondos\n    class RoundedBorder implements Border {\n        private int radius;\n        RoundedBorder(int radius) {\n            this.radius = radius;\n        }\n        public Insets getBorderInsets(Component c) {\n            return new Insets(this.radius+1, this.radius+1, this.radius+2, this.radius);\n        }\n        public boolean isBorderOpaque() {\n            return true;\n        }\n        public void paintBorder(Component c, Graphics g, int x, int y, int width, int height) {\n            g.drawRoundRect(x, y, width-1, height-1, radius, radius);\n        }\n    }\n\n    //Obtengo las actividades disponibles de la base de datos\n    public ArrayList<Actividad> ObtenActividades() {\n        Client cliente = new Client();\n        HashMap<String, Object> session = new HashMap<>();\n        String context = \"/getActividades\";\n       session = cliente.sentMessage(context, session);\n       ArrayList<Actividad> actividades= (ArrayList<Actividad>) session.get(\"Actividades\");\n        return actividades;\n    }\n\n    //Obtengo perfil del usuario (tres categorias de preferencia)\n    public String ObtenPerfil()  {\n        Client cliente = new Client();\n        HashMap<String, Object> session = new HashMap<>();\n        String context = \"/getPerfil\";\n        session.put(\"usuario\",this.usuario);\n        session=cliente.sentMessage(context,session);\n        Customer cu=(Customer)session.get(\"Customer\");\n        return cu.getPerfil();\n    }\n\n}\n\n\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ui/VentanaActividades.java b/src/main/java/ui/VentanaActividades.java
--- a/src/main/java/ui/VentanaActividades.java	(revision 344241420c9440ddf0fa12b5e1257b797c40385a)
+++ b/src/main/java/ui/VentanaActividades.java	(date 1668330793757)
@@ -137,9 +137,6 @@
         }
         //del resto de categorias que no se ajustan a su perfil no pongo ninguna actividad
 
-
-
-
         scrollPane.setViewportView(activi);
         this.add(scrollPane);
         this.setForeground(Color.BLUE);
